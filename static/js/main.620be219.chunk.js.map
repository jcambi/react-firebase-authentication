{"version":3,"sources":["config/Fire.js","components/Navbar.js","components/Login.js","components/Home.js","components/MainGrid.js","components/App.js","serviceWorker.js","index.js"],"names":["fire","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Navbar","react_default","a","createElement","AppBar","color","position","Toolbar","Typography","variant","this","props","title","Component","Login","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChange","event","setState","defineProperty","target","name","value","inputKeyPress","key","login","passwordChange","password","preventDefault","auth","signInWithEmailAndPassword","state","email","then","user","catch","error","signup","createUserWithEmailAndPassword","TextField","id","label","type","autoComplete","margin","style","width","onKeyPress","Button","size","onClick","message","Transition","React","forwardRef","ref","Slide","assign","direction","paperStyle","padding","btnStyle","marginTop","Home","logout","signOut","deleteUser","currentUser","delete","console","log","handleClickOpen","open","handleClose","Dialog","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Paper","component","MainGrid","className","children","App","authListener","_this2","onAuthStateChanged","components_Navbar","components_MainGrid","components_Home","components_Login","Boolean","window","location","hostname","match","require","config","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.620be219.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst config = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID\r\n};\r\nconst fire = firebase.initializeApp(config);\r\nexport default fire;","import React, { Component } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport TypoGraphy from \"@material-ui/core/Typography\";\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <AppBar color=\"primary\" position=\"static\">\r\n          <Toolbar>\r\n            <TypoGraphy variant=\"title\" color=\"inherit\">\r\n              {this.props.title}\r\n            </TypoGraphy>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\nimport fire from \"../config/Fire\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      error: null\r\n    };\r\n  }\r\n\r\n  onChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  inputKeyPress = event => {\r\n    if (event.key === \"Enter\") {\r\n      this.login(event);\r\n    }\r\n  };\r\n\r\n  passwordChange = event => {\r\n    this.setState({\r\n      password: event.target.value\r\n    });\r\n  };\r\n\r\n  login = event => {\r\n    event.preventDefault();\r\n    fire\r\n      .auth()\r\n      .signInWithEmailAndPassword(this.state.email, this.state.password)\r\n      .then(user => {})\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n  };\r\n\r\n  signup = event => {\r\n    event.preventDefault();\r\n    fire\r\n      .auth()\r\n      .createUserWithEmailAndPassword(this.state.email, this.state.password)\r\n      .then(user => {})\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <TextField\r\n            id=\"outlined-email-input\"\r\n            value={this.state.email}\r\n            onChange={this.onChange}\r\n            label=\"Email\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            style={{ width: 280 }}\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            id=\"outlined-password-input\"\r\n            value={this.state.password}\r\n            onChange={this.passwordChange}\r\n            onKeyPress={this.inputKeyPress}\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            autoComplete=\"current-password\"\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            style={{ width: 280 }}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Button\r\n            size=\"medium\"\r\n            onClick={this.login}\r\n            style={{ margin: 10 }}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Log In\r\n          </Button>\r\n          <Button\r\n            size=\"medium\"\r\n            onClick={this.signup}\r\n            style={{ margin: 10 }}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Sign Up\r\n          </Button>\r\n        </div>\r\n\r\n        {this.state.error && <p>{this.state.error.message}</p>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from \"react\";\r\nimport fire from \"../config/Fire\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst paperStyle = {\r\n  padding: 60,\r\n  margin: 50\r\n};\r\n\r\nconst btnStyle = {\r\n  margin: 10,\r\n  marginTop: 50\r\n};\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false\r\n    };\r\n  }\r\n  logout = () => {\r\n    fire.auth().signOut();\r\n  };\r\n\r\n  deleteUser = () => {\r\n    fire\r\n      .auth()\r\n      .currentUser.delete()\r\n      .then(() => {\r\n        console.log(\"User deleted\");\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  render() {\r\n    if (!this.state.open) {\r\n      return (\r\n        <div>\r\n          <Paper style={paperStyle}>\r\n            <Typography variant=\"h1\" component=\"h3\">\r\n              Home Page\r\n            </Typography>\r\n            <Typography component=\"p\" style={{ marginTop: 20 }}>\r\n              Routes for Account Page, Password Update, Admin, etc. can be\r\n              added.\r\n            </Typography>\r\n            <Button\r\n              size=\"medium\"\r\n              onClick={this.logout}\r\n              style={btnStyle}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              Log Out\r\n            </Button>\r\n            <Button\r\n              size=\"medium\"\r\n              onClick={this.handleClickOpen}\r\n              style={btnStyle}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              Delete Account\r\n            </Button>\r\n          </Paper>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <Dialog\r\n            open={this.state.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={this.handleClose}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n          >\r\n            <DialogTitle id=\"alert-dialog-slide-title\">\r\n              {\"Delete Account?\"}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText id=\"alert-dialog-slide-description\">\r\n                Deleting account results to an irreversible action.\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={this.handleClose} color=\"primary\">\r\n                Disagree\r\n              </Button>\r\n              <Button onClick={this.deleteUser} color=\"primary\">\r\n                Agree\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\n\r\nclass MainGrid extends Component {\r\n  render() {\r\n    const styles = {\r\n      marginTop: 50\r\n    };\r\n    return (\r\n      <div className=\"container\" style={styles}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">{this.props.children}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainGrid;\r\n","import React, { Component } from \"react\";\nimport fire from \"../config/Fire\";\nimport Navbar from \"./Navbar\";\nimport Login from \"./Login\";\nimport Home from \"./Home\";\nimport \"../App.css\";\nimport MainGrid from \"./MainGrid\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null\n    };\n  }\n\n  componentDidMount() {\n    this.authListener();\n  }\n\n  authListener() {\n    fire.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.setState({ user });\n      } else {\n        this.setState({ user: null });\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar title=\"React with Google Firebase\" />\n        <MainGrid>{this.state.user ? (<Home />) : (<Login />)}</MainGrid>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nrequire(\"dotenv\").config();\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nserviceWorker.unregister();\n"],"sourceRoot":""}